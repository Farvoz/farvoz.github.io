{"version":3,"sources":["stepLogic.js","Login.jsx","App.js","serviceWorker.js","index.js"],"names":["playStage","IN_PLAY","WIN","LOSE","stepType","BOSS_POWER","GOOD_PLACE","BOSS_WEAKNESS","BOSS_SUPER_POWER","LIGHT_BIT","SUPER_LIGHT","stepMap","Map","color","text","tooltip","possibleStepId","newPossibleStep","type","count","Infinity","id","get","initialPossibleSteps","decreasePossibleSteps","pickedStep","possibleSteps","reduce","acc","step","generateNextStep","prevStepType","length","Math","floor","random","generateBool","values","stepId","newStep","isHidden","KEY","VALID_TOKEN","Login","setToken","useEffect","token","localStorage","getItem","login","useRef","password","onSubmit","loginValue","path","passwordValue","setItem","ref","fillFocus","steps","emptySteps","slice","fillBasket","initialState","generateInitSteps","prevResult","prop","head","newPossibleSteps","basket","focus","getStepColor","getSlotColor","focusText","getTooltip","Boolean","window","location","hostname","match","ReactDOM","render","useReducer","state","freshStep","closestStep","last","hasBossSilence","isDevourLight","every","undefined","hasLightUpgrade","some","hasDebuff","newSteps","dropLast","makeNewBasket","oldBasket","getHasBossSuperPower","hasBossSuperPower","newBasketByFocus","hasBossSuperPowerByFocus","map","filter","dispatch","useState","isLogged","stage","onMissClick","useCallback","onFocusClick","onKeyPress","e","key","document","addEventListener","removeEventListener","className","possibleStep","style","background","title","getText","onClick","disabled","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.65526acc.chunk.js","sourcesContent":["import { head, prop } from \"ramda\"\r\n\r\n\r\nexport const playStage = {\r\n    IN_PLAY: 'IN_PLAY',\r\n    WIN: 'WIN',\r\n    LOSE: 'LOSE'\r\n}\r\n\r\nexport const stepType = {\r\n    BOSS_POWER: 'BOSS_POWER',\r\n    GOOD_PLACE: 'GOOD_PLACE',\r\n    BOSS_WEAKNESS: 'BOSS_WEAKNESS',\r\n    BOSS_SUPER_POWER: 'BOSS_SUPER_POWER',\r\n    LIGHT_BIT: 'LIGHT_BIT',\r\n    SUPER_LIGHT: 'SUPER_LIGHT'\r\n}\r\n\r\nexport const stepMap = new Map([\r\n    [ stepType.BOSS_POWER, {\r\n        color: '#FCA8A8',\r\n        text: 'Мощь',\r\n        tooltip: 'Если собрать 3 Мощи в фокусе, то будущие Мощи превращаются в Обессиливший Босс, а фокус становится пустым.\\n' +\r\n            'Из фокуса выталкивается в корзину, если не будет поглощена Светом или Мощью.\\n' +\r\n            'Если в корзине будет 2 Мощи и 1 Выгодное положение, то появляется вероятность 1 Босс Супер Сила.'\r\n    } ],\r\n    [ stepType.GOOD_PLACE, {\r\n        color: '#D3E7FF',\r\n        text: 'Выгодное положение',\r\n        tooltip: 'Если в корзине будет 2 Мощи и 1 Выгодное положение, то появляется вероятность 1 Босс Супер Сила.\\n' +\r\n            'Из фокуса выталкивается в корзину, если не будет поглощена Светом.'\r\n    } ],\r\n    [ stepType.BOSS_WEAKNESS, {\r\n        color: '#CECECE',\r\n        text: 'Обессиливший Босс',\r\n        tooltip: 'Если собрать 3 Мощи в фокусе, то будущие Мощи превращаются в Обессиливший Босс, а фокус становится пустым.\\n' +\r\n            'Если собрать 3 Частица Света в фокусе, то появляется вероятность 1 Обессиливший Босс.\\n' +\r\n            'Если Частица Света попадает в фокус, а там как минимум 1 Обессиливший Босс, то добавляется вероятность 1 Супер Свет'\r\n    } ],\r\n    [ stepType.BOSS_SUPER_POWER, {\r\n        color: '#FF0000',\r\n        text: 'Босс Супер Сила',\r\n        tooltip: 'Если в корзине будет 2 Мощи и 1 Выгодное положение, то появляется вероятность 1 Босс Супер Сила.\\n' +\r\n            'Если в корзину попадает, то ПРОИГРЫШ.'\r\n    } ],\r\n    [ stepType.LIGHT_BIT, {\r\n        color: '#FFF9BE',\r\n        text: 'Частица Света',\r\n        tooltip: 'Очищает фокус от Мощи и Выгодного положения.\\n' +\r\n            'Если собрать 3 Частица Света в фокусе, то появляется вероятность 1 Обессиливший Босс.\\n' +\r\n            'Если Частица Света попадает в фокус, а там как минимум 1 Обессиливший Босс, то добавляется вероятность 1 Супер Свет.\\n' +\r\n            'Если 1 Супер Свет попадате в фокус, а там уже 2 Частица Света, то ПОБЕДА.'\r\n    } ],\r\n    [ stepType.SUPER_LIGHT, {\r\n        color: '#7EFF84',\r\n        text: 'Супер Свет',\r\n        tooltip: 'Если Частица Света попадает в фокус, а там как минимум 1 Обессиливший Босс, то добавляется вероятность 1 Супер Свет\\n' +\r\n            'Если 1 Супер Свет попадате в фокус, а там уже 2 Частица Света, то ПОБЕДА.'\r\n    } ]\r\n])\r\n\r\n\r\nexport const playerActionType = {\r\n    MISS: 'MISS',\r\n    FOCUS: 'FOCUS',\r\n}\r\n\r\nlet possibleStepId = 0\r\nexport const newPossibleStep = (type, count = Infinity) => {\r\n\r\n    return {\r\n        id: possibleStepId++,\r\n        type,\r\n        count,\r\n        get color() {\r\n            return stepMap.get(type).color\r\n        }\r\n    }\r\n}\r\n\r\nexport const initialPossibleSteps = [\r\n    newPossibleStep(stepType.BOSS_POWER),\r\n    newPossibleStep(stepType.GOOD_PLACE),\r\n    newPossibleStep(stepType.LIGHT_BIT)\r\n]\r\n\r\nconst decreasePossibleSteps = (pickedStep, possibleSteps) => {\r\n\r\n    return possibleSteps.reduce((acc, step) =>\r\n        step.type === pickedStep.type\r\n            ? step.count - 1 <= 0 ? acc : [ ...acc, { ...step, count: step.count - 1 } ]\r\n            : [ ...acc, step ]\r\n    , [])\r\n}\r\nexport const generateNextStep = (prevStepType, possibleSteps) => {\r\n    const count = possibleSteps.length\r\n    const pickedStep = possibleSteps[ Math.floor(Math.random() * count) ]\r\n\r\n    return [\r\n        pickedStep.type,\r\n        decreasePossibleSteps(pickedStep, possibleSteps)\r\n    ]\r\n}\r\n\r\nconst generateBool = () => {\r\n    const values = [ true, false ]\r\n\r\n    return values[Math.floor(Math.random() * values.length)]\r\n}\r\n\r\n\r\nlet stepId = 0\r\nexport function newStep(stepType) {\r\n\r\n    return {\r\n        id: stepId++,\r\n        type: stepType,\r\n        isHidden: generateBool()\r\n    }\r\n}\r\n\r\nconst STEP_LIMIT = 3\r\nexport const generateInitSteps = (\r\n    count = STEP_LIMIT,\r\n    prevResult = [ newStep(stepType.GOOD_PLACE) ],\r\n    possibleSteps = initialPossibleSteps\r\n) => {\r\n    if (count < 2)\r\n        return prevResult\r\n\r\n    const [ stepType, newPossibleSteps ] = generateNextStep(prop('type', head(prevResult)), possibleSteps)\r\n\r\n    return generateInitSteps(count - 1,\r\n        [ newStep(stepType), ...prevResult ],\r\n        newPossibleSteps\r\n    )\r\n}","import React, { useEffect, useRef } from 'react'\r\nimport { path } from 'ramda'\r\n\r\n\r\nconst KEY = 'user'\r\nexport const VALID_TOKEN = 'vr\"(Jwb+Gu.aev7V'\r\n\r\nexport default function Login({ setToken }){\r\n    useEffect(() => {\r\n        const token = localStorage.getItem(KEY)\r\n\r\n        setToken(token)\r\n    })\r\n\r\n    const login = useRef(null)\r\n    const password = useRef(null)\r\n\r\n    const onClick = () => {\r\n        const loginValue = path([ 'current', 'value' ], login)\r\n        const passwordValue = path([ 'current', 'value' ], password)\r\n\r\n        if (loginValue === 'proto' && passwordValue === 'taunt1') {\r\n            localStorage.setItem(KEY, VALID_TOKEN)\r\n            setToken(VALID_TOKEN)\r\n        }\r\n    }\r\n\r\n    return (\r\n        <form onSubmit={ onClick }>\r\n            <input ref={ login }/>\r\n            <input ref={ password } type=\"password\"/>\r\n            <button type=\"submit\">Войти</button>\r\n        </form>\r\n    )\r\n}","import React, { useReducer, useEffect, useState, useCallback } from 'react'\r\nimport { last, head, dropLast } from \"ramda\"\r\n\r\nimport './App.css'\r\nimport {\r\n    generateInitSteps,\r\n    generateNextStep,\r\n    initialPossibleSteps,\r\n    newStep,\r\n    playStage,\r\n    stepType,\r\n    stepMap,\r\n    newPossibleStep\r\n} from \"./stepLogic\"\r\nimport Login, { VALID_TOKEN } from \"./Login\"\r\n\r\n\r\nfunction fillFocus(steps) {\r\n    const emptySteps = [ newStep(), newStep(), newStep() ]\r\n\r\n    return [ ...steps, ...emptySteps ].slice(0, 3)\r\n}\r\n\r\nfunction fillBasket(steps) {\r\n    const emptySteps = [ newStep(), newStep(), newStep() ]\r\n\r\n    return [ ...steps, ...emptySteps ].slice(0, 3)\r\n}\r\n\r\nconst initialState = {\r\n    steps: generateInitSteps(),\r\n    possibleSteps: initialPossibleSteps,\r\n    basket: fillBasket([]),\r\n    focus: fillFocus([])\r\n}\r\n\r\nfunction getStepColor({ isHidden, type }) {\r\n    const { color } = stepMap.get(type) || { color: 'white' }\r\n\r\n    if (isHidden)\r\n        return 'white'\r\n\r\n    return color\r\n}\r\n\r\nfunction getSlotColor({ type }) {\r\n    const { color } = stepMap.get(type) || { color: 'white' }\r\n\r\n    return color\r\n}\r\n\r\nfunction getText({ type, isHidden }) {\r\n    if (isHidden)\r\n        return '?'\r\n\r\n    const { text } = stepMap.get(type) || { text: '' }\r\n\r\n    return text\r\n}\r\n\r\nfunction focusText({ type }) {\r\n    const { text } = stepMap.get(type) || { text: '' }\r\n\r\n    return text\r\n}\r\n\r\nfunction getTooltip({ isHidden, type }) {\r\n    if (isHidden)\r\n        return ''\r\n\r\n    const { tooltip } = stepMap.get(type) || { tooltip: '' }\r\n\r\n    return tooltip\r\n}\r\n\r\nexport default function App() {\r\n    const [ { steps, possibleSteps, basket, focus }, dispatch ] = useReducer((state, { type }) => {\r\n        const freshStep = head(state.steps)\r\n        const closestStep = last(state.steps)\r\n\r\n        const [ step, newPossibleSteps ] = generateNextStep(freshStep, state.possibleSteps)\r\n\r\n        // 1 Перевоплощение Мощи в Ослабленный босс\r\n        const hasBossSilence =  closestStep.type === stepType.BOSS_POWER &&\r\n                                state.focus[0].type === stepType.BOSS_POWER &&\r\n                                state.focus[1].type === stepType.BOSS_POWER\r\n\r\n        // 2 Уничтожение всего, кроме света\r\n        const isDevourLight = closestStep.type === stepType.LIGHT_BIT &&\r\n                              ![ closestStep, ...state.focus ].every(step =>\r\n                                  step.type === stepType.LIGHT_BIT ||\r\n                                  step.type === undefined ||\r\n                                  step.type === stepType.SUPER_LIGHT ||\r\n                                  step.type === stepType.BOSS_SUPER_POWER\r\n                              )\r\n\r\n        // 3 Добавляется в вероятность Сильный свет\r\n        const hasLightUpgrade = isDevourLight && state.focus.some(step => step.type === stepType.BOSS_WEAKNESS)\r\n\r\n        // 4 Добавляется в вероятность Ослаблённый босс\r\n        const hasDebuff =   closestStep.type === stepType.LIGHT_BIT &&\r\n                            state.focus[0].type === stepType.LIGHT_BIT &&\r\n                            state.focus[1].type === stepType.LIGHT_BIT\r\n\r\n\r\n        const newSteps = [ newStep(step), ...dropLast(1, state.steps) ]\r\n\r\n        const makeNewBasket = (step, oldBasket) => {\r\n            return  step.type === stepType.BOSS_POWER ||\r\n                    step.type === stepType.GOOD_PLACE ||\r\n                    step.type === stepType.BOSS_SUPER_POWER\r\n                        ? fillBasket([ step, ...oldBasket ])\r\n                        : oldBasket\r\n        }\r\n        const getHasBossSuperPower = (basket) => basket.some(step => step.type === stepType.GOOD_PLACE) &&\r\n                                                 basket.reduce((acc, step) => step.type === stepType.BOSS_POWER\r\n                                                     ? acc + 1\r\n                                                     : acc\r\n                                                 , 0) === 2\r\n\r\n        // 5 Добавляется в вероятность Босс Супер Сила\r\n        const newBasket = makeNewBasket(closestStep, state.basket)\r\n        const hasBossSuperPower = getHasBossSuperPower(newBasket)\r\n\r\n        const newBasketByFocus = makeNewBasket(last(state.focus), state.basket)\r\n        const hasBossSuperPowerByFocus = getHasBossSuperPower(newBasketByFocus)\r\n\r\n\r\n        switch (type) {\r\n            case 'onMissClick':\r\n\r\n                return {\r\n                    ...state,\r\n                    steps: newSteps,\r\n                    possibleSteps: hasBossSuperPower\r\n                        ? [ ...newPossibleSteps, newPossibleStep(stepType.BOSS_SUPER_POWER, 1) ]\r\n                        : newPossibleSteps,\r\n                    basket: makeNewBasket(closestStep, state.basket),\r\n                }\r\n            case 'onFocusClick':\r\n\r\n                return {\r\n                    ...state,\r\n                    steps: hasBossSilence\r\n                        ? newSteps.map(step => ({ ...step, type: step.type === stepType.BOSS_POWER\r\n                                ? stepType.BOSS_WEAKNESS\r\n                                : step.type\r\n                        }))\r\n                        : newSteps,\r\n                    possibleSteps: hasLightUpgrade\r\n                        ? [ ...newPossibleSteps, newPossibleStep(stepType.SUPER_LIGHT, 1) ]\r\n                        : hasDebuff\r\n                            ? [ ...newPossibleSteps, newPossibleStep(stepType.BOSS_WEAKNESS, 1) ]\r\n                            : hasBossSuperPowerByFocus\r\n                                ? [ ...newPossibleSteps, newPossibleStep(stepType.BOSS_SUPER_POWER, 1) ]\r\n                                : newPossibleSteps,\r\n                    // Когда уничтожается фокус\r\n                    focus: hasBossSilence || hasDebuff\r\n                        ? fillFocus([])\r\n                        : isDevourLight\r\n                            ? fillFocus([ closestStep, ...state.focus ].filter(step =>\r\n                                step.type === stepType.LIGHT_BIT ||\r\n                                step.type === stepType.SUPER_LIGHT ||\r\n                                step.type === stepType.BOSS_SUPER_POWER\r\n                            ))\r\n                            : fillFocus([ closestStep, ...state.focus ]),\r\n                    // Когда уничтожается, то ничего не идёт в корзину\r\n                    basket: hasBossSilence || isDevourLight\r\n                        ? state.basket\r\n                        // В других случаях идёт\r\n                        : newBasketByFocus\r\n                }\r\n            default:\r\n                return state\r\n        }\r\n    }, initialState)\r\n\r\n    const [ token, setToken ] = useState('')\r\n    const isLogged = token === VALID_TOKEN\r\n\r\n    const stage = selectStage()\r\n\r\n\r\n    const onMissClick = useCallback(() => {\r\n        stage === playStage.IN_PLAY && dispatch({ type: 'onMissClick' })\r\n    }, [ stage ])\r\n    const onFocusClick = useCallback(() => {\r\n        stage === playStage.IN_PLAY && dispatch({ type: 'onFocusClick' })\r\n    }, [ stage ])\r\n\r\n    useEffect(() => {\r\n        const onKeyPress = (e) => {\r\n            switch (e.key) {\r\n                case '1':\r\n                    onMissClick()\r\n                    break\r\n                case '2':\r\n                    onFocusClick()\r\n                    break\r\n                default:\r\n                    break\r\n            }\r\n        }\r\n\r\n        isLogged && document.addEventListener('keypress', onKeyPress)\r\n\r\n        return () => document.removeEventListener('keypress', onKeyPress)\r\n    }, [ isLogged, stage, onMissClick, onFocusClick ])\r\n\r\n    if (!isLogged)\r\n        return (\r\n            <Login setToken={ setToken }/>\r\n        )\r\n\r\n    return (\r\n        <article>\r\n            <header>\r\n                { stage === playStage.WIN && 'ПОБЕДА!' }\r\n                { stage === playStage.LOSE && 'ПОРАЖЕНИЕ!' }\r\n                { stage === playStage.IN_PLAY && (\r\n                    <div className=\"possible-steps\">\r\n                        { possibleSteps.map(possibleStep => (\r\n                            <div\r\n                                key={ possibleStep.id }\r\n                                className=\"possible-step\"\r\n                                style={ { background: possibleStep.color } }\r\n                                title={ getTooltip(possibleStep) }\r\n                            />\r\n                        ))}\r\n                    </div>\r\n                )}\r\n            </header>\r\n            <main>\r\n                <section className=\"left-section\">\r\n                    <div className=\"steps\">\r\n                        { steps.map(step => (\r\n                            <div\r\n                                key={ step.id }\r\n                                className=\"step\"\r\n                                style={ { background: getStepColor(step) } }\r\n                                title={ getTooltip(step) }\r\n                            >\r\n                                { getText(step) }\r\n                            </div>\r\n                        ))}\r\n                    </div>\r\n                    <div className=\"player-action-panel\">\r\n                        <button className=\"player-action\" onClick={ onMissClick } disabled={ stage !== playStage.IN_PLAY }>↓</button>\r\n                        <button className=\"player-action\" onClick={ onFocusClick } disabled={ stage !== playStage.IN_PLAY }>→</button>\r\n                    </div>\r\n                    <div className=\"basket\">\r\n                        Корзина\r\n                        { basket.map(step => (\r\n                            <div\r\n                                key={ step.id }\r\n                                className=\"step\"\r\n                                style={ { background: getSlotColor(step) } }\r\n                                title={ getTooltip(step) }\r\n                            >\r\n                                { focusText(step) }\r\n                            </div>\r\n                        ))}\r\n                    </div>\r\n                </section>\r\n                <section>\r\n                    <div>Выиграть: положить в фокус в любом порядке 1 Супер Свет и 2 Частицы Светы</div>\r\n                    <div>Проиграть: как только 1 Босс Супер Сила попадает в корзину</div>\r\n                    <div className=\"focus\">\r\n                        { focus.map(step => (\r\n                            <div\r\n                                key={ step.id }\r\n                                className=\"step\"\r\n                                style={ { background: getSlotColor(step) } }\r\n                                title={ getTooltip(step) }\r\n                            >\r\n                                { focusText(step) }\r\n                            </div>\r\n                        ))}\r\n                    </div>\r\n                </section>\r\n            </main>\r\n        </article>\r\n    )\r\n\r\n    function selectStage() {\r\n        if (focus.some(step => step.type === stepType.SUPER_LIGHT) &&\r\n            focus.reduce((acc, step) => step.type === stepType.LIGHT_BIT\r\n                ? acc + 1\r\n                : acc\r\n            , 0) === 2\r\n        )\r\n            return playStage.WIN\r\n\r\n        if (basket.some(step => step.type === stepType.BOSS_SUPER_POWER))\r\n            return playStage.LOSE\r\n\r\n        return playStage.IN_PLAY\r\n    }\r\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}